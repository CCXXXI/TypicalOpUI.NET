<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imglogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAqZJREFUWEfVl7Fx
        wzAMRTVIFvAOmUJ9JtGlyXmOFLlzqRVSeoS0GUXhg/hlkKIoyk6K8I5nWQKBjw+AILvuv43TczfZfOK3
        n+fy3E1/4s/NSDeNn+PEuH5f7ZnJM4NnD+5hMH30bnyfjZzfzhPvguLi5BsyBi6sgZkofxwLi4fX3jzr
        X7aNboIJaxjoQNchBCzAg8vHRYsTjy3mhZmDQQYdYqMJhBkntgGAV6hEg43aVL74tehqAiHPV8ZDbEtG
        oZdZ+gaQHAT5Ed+XySBhSKAYM1PAAhkwOmPW85xPS1LPUAbCdM/v1gOjCPgs98ZhxSfjCXA7U2DEBPqc
        gykIhPFuEaaEojfQbHG0Og+MBMPnMKcgszUBJ0Y8o86RG4DFe1duMAGAxXgEAO2AbAEgYwlzQa+rrhkE
        ABgl7/FC3is5hx3vYQUGkC+xsAoDtCb0u8TTfiDjY4V2H44VAJeQVpIuGZdmIgZy+kV7q3HPwBIGB8Dn
        hNGvvXsBEJNP+zoyezH/CpQTGskpCX1pSr96iwFR/AkByZIPU1ChHYMYQ7mal8pzpSz2FXVU9Yhlsdqq
        X4jSgRyhTMOv4oxhbVRUCmt9FwREaeR7zVwFKN4YCYAIAkasFGPrlXFTHku35Iw3keyICsMWZRgcMB6m
        uqC2ZG9clbJnHDtJi1YHLAFQBSi+eK4kyo37M8QmpeHDaiMiDKUElBK+JaUTE05btTqfDjA14+6Ak/YC
        lePW4ry9+l1TSbhnmO+bzchYqCQji0k6Gfa/vG8d1fOAbTgNyoghXvPbknACt3sgUWPSRtHqVYtc05FM
        WaGjWYviFplDxj2I1qyugbjrWC4Q/mLS4qmXefhi4otUR207HcWrWQkQ3+RxNdvTHeDYP2MluZDeLqd3
        X8OOQfhd6R+g5B7tjM7e1QAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="tmrFailure.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>111, 17</value>
  </metadata>
  <data name="medBarCode.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAgQAAAAIB
        AAAAAQAAAAAkAAAAbWdrZ3Rnbm5tbm1uaW5pZ3Roa2dvZ2dndm1raGluamdnbnZtAAAAAEgAAAAhQzQS
        CAAAALUSAAD3AQAA7aztrAAABgAkAAAAAQAAAAAAAQAAAAAABQAAgAgAAIAAAAAAAAD//wAAAAAAAEAA
        AAAAAAIAXwAL
</value>
  </data>
  <metadata name="rtbReport.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="TestExecSL1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAANwAAAAIB
        AAAAAQAAAAAAAAAAAAAAACIAAAAAAAMAIgQAACIEAAAAAAAAAP8LVGVzdEV4ZWMgU0z0AQAACw==
</value>
  </data>
  <metadata name="staDescriptions.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="staStats.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAQAgAAAADoAgAAFgAAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAABERAAAAAAAAAAAAAAAAAAER
        EQAAAAAAAAAAAAAAAAABERGQAAAAAAAAAAAAAAAAAREZmQAAAAAAAAAAAAAAAAERmZmRAAAAAAAAAAAA
        AAABmZmZmZAAAAAAAAAAAAAAAJmZmZmZkAAAAACQAAAAAAAZmZmZmZmZAAAZkAAAAAAAAZmZmZmZmZmZ
        mZCIAAAAAAGZmZmZmZmZmZmQiIAAAAAAGZmZmZmZmZmZkIiIAAAAAAGZmZmZmZmZmZCIiIAAAAAAGZmZ
        mZmZmZmQiIiAAAAAAAGZmZmZmZmZkIiIiAAAAAAAAZmZmZmZmZCIiIgAAAAAAAGZmZmZmZmQiIiIAAAA
        AAAZmZmZmZmZkIiIiAAAAAABmZmZmZmZmZCIiIgAAAAAAAAAAAAAAAAAiIiIAAAAAAAAAAAIiIiIiIiI
        gAAAAAAAAAAACIiIiIiIiIAAAAAAAAAAAACIiIiIiIgAAAAAAAAAAAAACIiIiIiAAAAAAAAAAAAAAAAI
        iIiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+A///+AH///AH///gH///wD///4B/
        //+A////AP///wB///8AH///AA/+/wAD+P+AAOB/gAAAH8AAAAfAAAAD4AAAA/AAAAH4AAAB/AAAAP4A
        AAD/AAAA/gAAAPwAAAD4AAAA//gAAf/4AAH//AAD//wAA//+AAf//wAf///Afw==
</value>
  </data>
</root>
